// <auto-generated />
using System;
using ApiSite.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiSite.Migrations.BillQuery
{
    [DbContext(typeof(BillQueryContext))]
    partial class BillQueryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiSite.Models.BillQuery.ColumnInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Fixed");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<bool>("Sortable");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("ColumnInfo");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Connection");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.DynamicText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColumnInfoId");

                    b.Property<int?>("FieldMenuItemId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ColumnInfoId");

                    b.HasIndex("FieldMenuItemId");

                    b.ToTable("DynamicText");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.FieldMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColumnInfoId");

                    b.Property<int>("MethodId");

                    b.Property<string>("Params")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ColumnInfoId");

                    b.HasIndex("MethodId");

                    b.ToTable("FieldMenuItem");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.Method", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action")
                        .IsRequired();

                    b.Property<string>("Comment")
                        .IsRequired();

                    b.Property<int?>("ConnectionId");

                    b.Property<int?>("DynamicTextId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.HasIndex("DynamicTextId");

                    b.ToTable("Method");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.DynamicText", b =>
                {
                    b.HasOne("ApiSite.Models.BillQuery.ColumnInfo")
                        .WithMany("Title")
                        .HasForeignKey("ColumnInfoId");

                    b.HasOne("ApiSite.Models.BillQuery.FieldMenuItem")
                        .WithMany("Title")
                        .HasForeignKey("FieldMenuItemId");
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.FieldMenuItem", b =>
                {
                    b.HasOne("ApiSite.Models.BillQuery.ColumnInfo")
                        .WithMany("Menu")
                        .HasForeignKey("ColumnInfoId");

                    b.HasOne("ApiSite.Models.BillQuery.Method", "Method")
                        .WithMany()
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApiSite.Models.BillQuery.Method", b =>
                {
                    b.HasOne("ApiSite.Models.BillQuery.Connection", "Connection")
                        .WithMany()
                        .HasForeignKey("ConnectionId");

                    b.HasOne("ApiSite.Models.BillQuery.DynamicText")
                        .WithMany("Params")
                        .HasForeignKey("DynamicTextId");
                });
#pragma warning restore 612, 618
        }
    }
}
